Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 emoslib (2:4.1.1-2) UNRELEASED; urgency=medium
 .
   * Change /usr/lib/*/cmake/Emos -> /usr/lib/*/cmake/libemos
   * libemos-dev now depends on libemos-bin as cmake configs assume binaries
     are available.
Author: Alastair McKinstry <mckinstry@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

Index: emoslib-4.4.9/cmake/project-config.cmake.in
===================================================================
--- emoslib-4.4.9.orig/cmake/project-config.cmake.in
+++ emoslib-4.4.9/cmake/project-config.cmake.in
@@ -20,7 +20,7 @@
 get_filename_component(@PNAME@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
 
 set( @PNAME@_SELF_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@" )
-set( @PNAME@_SELF_DEFINITIONS  "@CONF_DEFINITIONS@" )
+set( @PNAME@_SELF_DEFINITIONS  '@CONF_DEFINITIONS@' )
 set( @PNAME@_SELF_LIBRARIES    "@CONF_LIBRARIES@" )
 
 set( @PNAME@_TPLS              "@CONF_TPLS@" )
@@ -72,12 +72,12 @@ include( ${CMAKE_CURRENT_LIST_FILE}.tpls
 
 if( NOT @PROJECT_NAME@_BINARY_DIR )
 
-  if( @PNAME@_IS_BUILD_DIR_EXPORT )
-    include( "@TOP_PROJECT_TARGETS_FILE@" OPTIONAL )
-  else()
-    include( "${@PNAME@_CMAKE_DIR}/@PROJECT_NAME@-targets.cmake" OPTIONAL )
-  endif()
-
+  #if( @PNAME@_IS_BUILD_DIR_EXPORT )
+  #  include( "@TOP_PROJECT_TARGETS_FILE@" OPTIONAL )
+  #else()
+  #  include( "${@PNAME@_CMAKE_DIR}/@PROJECT_NAME@-targets.cmake" OPTIONAL )
+  #endif()
+  include( "${@PNAME@_CMAKE_DIR}/@CMAKE_PROJECT_NAME@-targets.cmake" )
 endif()
 
 # publish this file as imported
@@ -88,10 +88,5 @@ mark_as_advanced( @PNAME@_IMPORT_FILE )
 # set @PROJECT_NAME@_BASE_DIR for final installations or build directories
 
 if( NOT @PROJECT_NAME@ )
-  if( @PNAME@_IS_BUILD_DIR_EXPORT )
-    set( @PROJECT_NAME@_BASE_DIR @CMAKE_BINARY_DIR@ )
-  else()
-    get_filename_component( abspath ${CMAKE_CURRENT_LIST_DIR}/../../.. ABSOLUTE )
-    set( @PROJECT_NAME@_BASE_DIR ${abspath} )
-  endif()
+  set( @PROJECT_NAME@_BASE_DIR @CMAKE_INSTALL_PREFIX@ )
 endif()
Index: emoslib-4.4.9/cmake/ecbuild_add_executable.cmake
===================================================================
--- emoslib-4.4.9.orig/cmake/ecbuild_add_executable.cmake
+++ emoslib-4.4.9/cmake/ecbuild_add_executable.cmake
@@ -290,7 +290,7 @@ macro( ecbuild_add_executable )
 
       # set build location
 
-      set_target_properties( ${_PAR_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
+      set_target_properties( ${_PAR_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/usr/bin )
 
       # export location of target to other projects -- must be exactly after setting the build location (see previous command)
 
Index: emoslib-4.4.9/cmake/ecbuild_add_library.cmake
===================================================================
--- emoslib-4.4.9.orig/cmake/ecbuild_add_library.cmake
+++ emoslib-4.4.9/cmake/ecbuild_add_library.cmake
@@ -500,8 +500,8 @@ function( ecbuild_add_library_impl )
 
       # set build location
 
-      set_target_properties( ${_PAR_TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
-      set_target_properties( ${_PAR_TARGET} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
+      set_target_properties( ${_PAR_TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${INSTALL_LIBDIR} )
+      set_target_properties( ${_PAR_TARGET} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${INSTALL_LIBDIR} )
 
       # export location of target to other projects -- must be exactly after setting the build location (see previous 2 commands)
 
